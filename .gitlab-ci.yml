stages:
  - build
  - test
  - quality
  - scan
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "üîß Building services..."
    - docker build -t auth-service ./service-auth
    - docker build -t product-service ./service-product
    - docker build -t cart-service ./service-cart
  only:
    - main
    - merge_requests

test:
  stage: test
  image: node:18
  script:
    - echo "Running tests..."
    - cd service-auth && npm install && npm test -- --coverage && cd ..
    - cd service-product && npm install && npm test -- --coverage && cd ..
    - cd service-cart && npm install && npm test -- --coverage && cd ..
  artifacts:
    paths:
      - service-auth/coverage/lcov.info
      - service-product/coverage/lcov.info
      - service-cart/coverage/lcov.info
    expire_in: 1 hour
  only:
    - main
    - merge_requests

quality:
  stage: quality
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - echo "Running SonarCloud analysis..."
    - sonar-scanner 
        -Dsonar.projectKey=VibhavKhaneja_project
        -Dsonar.organization=vibhavkhaneja
        -Dsonar.sources=.
        -Dsonar.host.url=https://sonarcloud.io
        -Dsonar.login=$SONAR_TOKEN
        -Dsonar.branch.name=main
  only:
    - main
    - merge_requests
    
scan:
  stage: scan
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
  script:
    - echo "üê≥ Rebuilding Docker images for scanning..."
    - docker build -t auth-service ./service-auth
    - docker build -t product-service ./service-product
    - docker build -t cart-service ./service-cart

    - echo "üîç Scanning images with Trivy (only HIGH/CRITICAL)..."
    - trivy image --severity HIGH,CRITICAL --format json --output trivy-auth.json auth-service
    - trivy image --severity HIGH,CRITICAL --format json --output trivy-product.json product-service
    - trivy image --severity HIGH,CRITICAL --format json --output trivy-cart.json cart-service
  artifacts:
    paths:
      - trivy-auth.json
      - trivy-product.json
      - trivy-cart.json
    expire_in: 1 week
  only:
    - main
    - merge_requests

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache docker-compose
  script:
    - echo "üöÄ Starting deployment using Docker Compose..."
    - docker-compose down
    - docker-compose up -d --build
  only:
    - main
